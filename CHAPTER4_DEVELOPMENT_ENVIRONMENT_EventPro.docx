CHAPTER 4
DEVELOPMENT ENVIRONMENT

4.1 HARDWARE REQUIREMENT

| Component      | Specification         |
|----------------|----------------------|
| RAM            | 8 GB (minimum)       |
| Processor      | Intel Core i5 or above|
| Hard Disk      | 100 GB (minimum)     |

4.2 SOFTWARE REQUIREMENT

| Component           | Specification                                  |
|---------------------|------------------------------------------------|
| Frontend Language   | TypeScript (Angular Framework)                 |
| Backend Language    | Java (Spring Boot Framework)                   |
| Database            | MySQL                                          |
| Operating System    | Windows 10 / Linux / macOS                     |
| IDEs                | Visual Studio Code, IntelliJ IDEA, MySQL Workbench|
| Build Tools         | Maven/Gradle (for Java), Angular CLI           |
| Web Server          | Apache Tomcat (embedded in Spring Boot)        |
| Browser             | Google Chrome, Mozilla Firefox, Edge           |
| Version Control     | Git                                            |

4.3 LANGUAGE REVIEW

4.3.1 Introduction to Angular

4.3.1.1 Angular
Angular is a powerful, open-source front-end web application framework developed and maintained by Google. It is written in TypeScript and is designed for building dynamic, single-page web applications (SPAs). Angular provides a robust structure for managing complex applications, including features such as two-way data binding, modularization, dependency injection, and a powerful CLI for scaffolding and managing projects.

Angular's component-based architecture allows developers to build reusable UI elements, making the development process more efficient and maintainable. The framework also supports reactive programming with RxJS, enabling efficient handling of asynchronous data streams.

4.3.1.2 Angular Platform
The Angular platform consists of the Angular framework, Angular CLI, and a rich ecosystem of libraries and tools. The Angular CLI simplifies project setup, development, testing, and deployment. Angular applications are typically developed using IDEs such as Visual Studio Code, which provides features like code completion, debugging, and integration with version control systems.

Angular supports integration with various UI libraries (e.g., Bootstrap, Angular Material) and can consume RESTful APIs provided by backend services. The platform is cross-platform, allowing applications to run on any modern web browser.

4.3.1.3 Features of Angular
- Component-Based Architecture: Promotes reusability and modularity.
- Two-Way Data Binding: Synchronizes data between the model and the view.
- Dependency Injection: Enhances code maintainability and testability.
- Routing: Enables navigation between different views or pages.
- Rich Ecosystem: Includes tools for testing, building, and deploying applications.
- Reactive Programming: Efficient handling of asynchronous data with RxJS.
- Cross-Platform: Runs on all major browsers and operating systems.
- Strong Community Support: Extensive documentation and community resources.

4.3.2 Introduction to Java Spring Boot

4.3.2.1 Java
Java is a high-level, object-oriented programming language known for its portability, robustness, and security. It is widely used for building enterprise-scale applications, web services, and backend systems. Java's platform independence allows applications to run on any device equipped with a Java Virtual Machine (JVM).

4.3.2.2 Spring Boot
Spring Boot is an extension of the Spring framework that simplifies the setup and development of new Spring applications. It provides a production-ready environment with embedded servers, auto-configuration, and minimal setup, making it ideal for building RESTful APIs and microservices.

Spring Boot applications are typically developed using IDEs such as IntelliJ IDEA or Eclipse, which offer advanced code navigation, refactoring, and Spring-specific tools. The framework supports integration with various databases, security modules, and third-party libraries.

4.3.2.3 Features of Spring Boot
- Auto-Configuration: Reduces boilerplate code and configuration.
- Embedded Servers: No need for external web servers; supports Tomcat, Jetty, etc.
- RESTful API Support: Easily build and expose REST endpoints.
- Security: Built-in support for authentication and authorization.
- Integration: Works seamlessly with databases, messaging systems, and other technologies.
- Production-Ready: Health checks, metrics, and monitoring out of the box.
- Scalable and Maintainable: Suitable for large-scale enterprise applications.

4.3.3 Introduction to MySQL

4.3.3.1 MySQL
MySQL is a widely used open-source relational database management system (RDBMS). It is known for its reliability, performance, and ease of use. MySQL is used to store and manage all persistent data for the EventPro application, including user information, vendor details, event data, chat messages, and bids.

4.3.3.2 MySQL Platform
MySQL can be managed using tools like MySQL Workbench, which provides a graphical interface for database design, query execution, and data management. MySQL integrates easily with Java applications via JDBC, allowing seamless data access and manipulation.

4.3.3.3 Features of MySQL
- Relational Database: Organizes data into tables with relationships.
- ACID Compliance: Ensures data integrity and reliability.
- Scalability: Handles large volumes of data efficiently.
- Security: Provides robust access control and data protection.
- Integration: Easily integrates with Java applications via JDBC.
- Cross-Platform: Runs on Windows, Linux, and macOS.

4.3.4 Integrated Development Environments (IDEs)
- Visual Studio Code: Used for Angular frontend development, offering features like syntax highlighting, debugging, and extensions for Angular.
- IntelliJ IDEA / Eclipse: Used for Java Spring Boot backend development, providing advanced code navigation, refactoring, and Spring-specific tools.
- MySQL Workbench: Used for database design, query execution, and data management.

4.3.5 Build and Deployment Tools
- Angular CLI: Command-line interface for scaffolding, building, and serving Angular applications.
- Maven/Gradle: Build automation tools for managing Java dependencies and building Spring Boot applications.
- Git: Version control system for source code management and collaboration.
- Postman: API testing tool for backend endpoints.
- Docker (optional): For containerized deployment of backend and database.

4.4 FRAMEWORK REVIEW

4.4.1 Angular Framework
Angular provides a structured approach to building web applications, with a focus on modularity, reusability, and maintainability. Its component-based architecture allows for the development of complex user interfaces, while its CLI streamlines project setup and management.

4.4.2 Spring Boot Framework
Spring Boot simplifies backend development by providing a convention-over-configuration approach. It enables rapid development of RESTful APIs, integrates easily with databases like MySQL, and supports security, testing, and deployment out of the box.

4.4.3 MySQL Database
MySQL is used to persist all application data. Its relational model ensures data consistency and supports complex queries, transactions, and relationships between entities such as users, vendors, events, and messages.

4.5 FEATURES OF THE TECHNOLOGIES USED
- Angular: Fast, scalable, and maintainable frontend development.
- Spring Boot: Robust, secure, and scalable backend services.
- MySQL: Reliable and efficient data storage and retrieval.
- RESTful APIs: Seamless communication between frontend and backend.
- Responsive UI: Ensures usability across devices and screen sizes.
- Cross-Platform Support: All technologies run on major operating systems.

4.6 PACKAGE AND LIBRARY REVIEW

4.6.1 Angular Packages
- @angular/core, @angular/common, @angular/forms, @angular/router: Core Angular modules for application structure, forms, and routing.
- @angular/platform-browser, @angular/platform-browser-dynamic: Browser support and dynamic compilation.
- @angular/animations: Animation support for UI components.
- rxjs: Reactive programming for asynchronous data streams.
- zone.js: Change detection mechanism.
- bootstrap, @ng-bootstrap/ng-bootstrap: UI styling and Bootstrap components.
- ngx-toastr: Toast notifications for user feedback.

4.6.2 Java Spring Boot Dependencies
- spring-boot-starter-web: For building RESTful web services.
- spring-boot-starter-data-jpa: For database access using JPA and Hibernate.
- spring-boot-starter-security: For authentication and authorization.
- mysql-connector-java: JDBC driver for MySQL database connectivity.
- spring-boot-starter-test: For unit and integration testing.

4.6.3 MySQL Tools
- MySQL Workbench: Database design and management.
- JDBC: Java Database Connectivity for backend integration.

4.7 DEPLOYMENT
- Frontend Deployment: Angular application can be deployed on web servers like Apache, Nginx, or cloud platforms.
- Backend Deployment: Spring Boot application can be deployed as a standalone JAR/WAR or on cloud services (AWS, Azure, GCP).
- Database Deployment: MySQL can be hosted locally, on a dedicated server, or as a managed cloud database. 